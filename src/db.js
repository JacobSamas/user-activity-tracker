const mysql = require("mysql2/promise");
require("dotenv").config();

// Create a connection pool
const pool = mysql.createPool({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    waitForConnections: true,
    connectionLimit: 10,
    queueLimit: 0,
});

/**
 * Save user activity to the database.
 * @param {Object} data - User activity data.
 * @param {string} data.event - The event type (e.g., 'page_view', 'click').
 * @param {Object} data.details - Additional details for the event.
 * @param {string} data.timestamp - Timestamp in ISO 8601 format.
 */
const saveUserActivity = async (data) => {
    let connection;
    try {
      // Log incoming data
      console.log("saveUserActivity called with data:", data);
  
      // Acquire a connection from the pool
      connection = await pool.getConnection();
  
      const { event, details, timestamp } = data;
      console.log("Extracted data:", { event, details, timestamp });
  
      // Validate and prepare data
      const jsonDetails = JSON.stringify(details); // Ensure `details` is a valid JSON string
      const formattedTimestamp = timestamp
        ? new Date(timestamp).toISOString().slice(0, 23).replace("T", " ")
        : null; // Format to `YYYY-MM-DD HH:MM:SS.SSS`
  
      console.log("Formatted data:", {
        event_type: event,
        details: jsonDetails,
        timestamp: formattedTimestamp || "DEFAULT (generated by DB)",
      });
  
      // Construct the query
      const query =
        "INSERT INTO user_activity (event_type, details, timestamp) VALUES (?, ?, ?)";
      const params = [event, jsonDetails, formattedTimestamp || null];
  
      // Execute the query
      const [result] = await connection.execute(query, params);
      console.log("Database insert result:", result);
  
      return result;
    } catch (err) {
      console.error("Error in saveUserActivity:", err.message, err.stack);
      throw new Error("Database operation failed: " + err.message);
    } finally {
      if (connection) connection.release(); // Release connection back to the pool
    }
  };
  

module.exports = { saveUserActivity };
